{"version":3,"file":"static/js/809.9d980add.chunk.js","mappings":"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","sources":["components/pagination/Pagination.js","components/productFilter/ProductList-style.js","components/productFilter/ProductFilterApi.js","pages/products/Products.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport ListContext from \"../../states/ListContext\";\nimport { Paginate } from \"../productFilter/ProductList-style\";\nimport \"./Pagination.css\";\n\nexport default function Pagination({ postPerPage, totalPosts }) {\n  const { setCurrentPage, activeItem, setActiveItem } = useContext(ListContext);\n  const pageNumbers = [];\n\n  const handleClick = (e, number) => {\n    setCurrentPage(e.target.name);\n    setActiveItem(number);\n    window.scrollTo(0, 0);\n  };\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"Pages\">\n        {pageNumbers.map((number) => (\n          <li key={number} className=\"Page\">\n            <button\n              key={number}\n              name={number}\n              onClick={(e) => handleClick(e, number)}\n              className={activeItem === number ? \"PageButtonOn\" : \"PageButton\"}\n            >\n              {number}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  overflow: hidden;\n  background-color: #e6e6e6;\n  width: 100%;\n  display: flex;\n  gap: 10px;\n  height: auto;\n  flex-wrap: nowrap;\n  height: auto;\n  border-top: 60px solid #e6e6e6;\n  @media (max-width: 900px) {\n    display: inline;\n  }\n`;\nexport const NavBarContainer = styled.nav`\n  margin-left: 8vw;\n  background-color: #e6e6e6;\n  border-radius: 10px;\n  padding: 1rem 1rem;\n  flex: 1;\n  height: 100vh;\n  @media (max-width: 900px) {\n    border-radius: 0px;\n    width: 100%;\n    padding: 0 0;\n    margin-left: 0;\n    border: none;\n    height: auto;\n    gap: 0;\n    width: 100%;\n    height: auto;\n    border-radius: 0;\n    border: none;\n    border-top: 20px solid #e6e6e6;\n    z-index: 3;\n    padding-top: 10vw;\n  }\n`;\n\nexport const NavBarList = styled.div`\n  @media (max-width: 900px) {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-evenly;\n  }\n`;\nexport const NavBarCard = styled.div`\n  h1 {\n    font-size: 1.6vw;\n    margin-bottom: 2.7vw;\n    @media (max-width: 900px) {\n      margin-bottom: 0px;\n      align-items: center;\n      font-size: 3vw;\n      text-align: center;\n    }\n  }\n  h2 {\n    font-size: 1.1vw;\n    @media (max-width: 900px) {\n      text-align: center;\n      font-size: 1.6vw;\n    }\n  }\n  h3 {\n    font-size: 1vw;\n    color: gray;\n    @media (max-width: 900px) {\n      font-size: 3vw;\n    }\n  }\n  li {\n    margin: 0px;\n    list-style: none;\n    font-size: 0.8vw;\n    color: gray;\n  }\n  ul {\n    list-style-type: none;\n    padding: 0px;\n    margin: 0px;\n    @media (max-width: 900px) {\n      margin: 0 auto;\n      align-items: center;\n      gap: 3vw;\n    }\n  }\n`;\n\nexport const ProductContainer = styled.div`\n  background-color: #e6e6e6;\n  @media (max-width: 900px) {\n    padding: 10vw 0;\n  }\n`;\nexport const ProductCard = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  background-color: #e6e6e6;\n`;\n\nexport const ProductImage = styled.div`\n  background-color: white;\n  border-radius: 7px;\n  width: 70%;\n  img {\n    object-fit: cover;\n    width: 80%;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const Line = styled.div`\n  margin: auto 13px;\n  border: 0.6px solid gray;\n  opacity: 30%;\n`;\n\nexport const ProductText = styled.div`\n  position: relative;\n  height: 100%;\n  padding: 3.5vw 1.5vw;\n\n  @media (max-width: 900px) {\n    padding: 4.5vw 4.5vw;\n  }\n`;\nexport const ProductName = styled.div`\n  font-size: 1vw;\n  color: gray;\n  @media (max-width: 900px) {\n    font-size: 2.7vw;\n  }\n`;\n\nexport const ProductPrice = styled.div`\n  font-size: 1.8vw;\n  @media (max-width: 900px) {\n    font-size: 4vw;\n  }\n`;\n\nexport const ProductCategory = styled.div`\n  position: absolute;\n  font-size: 0.7vw;\n  color: gray;\n  top: 0;\n  @media (max-width: 900px) {\n    font-size: 2vw;\n  }\n`;\n\nexport const Paginate = styled.div`\n  font-size: 1.8vw;\n  background-color: #e6e6e6;\n  height: 30vw;\n  justify-content: center;\n  display: flex;\n  @media (max-width: 900px) {\n    font-size: 4vw;\n  }\n`;\nexport const Arrow = styled.button`\n  border-radius: 0.3rem;\n  background-color: #e6e6e6;\n  color: #6495ed;\n  border-width: 0px;\n  padding: 3vw;\n  font-size: 2vw;\n  @media (max-width: 900px) {\n    font-size: 4vw;\n    width: 12vw;\n    height: 12vw;\n  }\n`;\nexport const Title = styled.div`\n  margin-top: \"0\";\n  @media (max-width: 900px) {\n    margin-top: \"15vw\";\n  }\n`;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useContext } from \"react\";\nimport * as styles from \"./ProductList-style\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useFeaturedBanners } from \"../../utils/hooks/useFeaturedBanners\";\nimport ListContext from \"../../states/ListContext\";\nimport useFilter from \"../../utils/hooks/useFilter\";\nimport ProductGrid from \"../productGrid/ProductGrid\";\nimport Pagination from \"../pagination/Pagination\";\n\nconst myStyleGray = {\n  color: \"gray\",\n};\n\nconst myStyleBlue = {\n  color: \"blue\",\n};\n\nexport default function ProductFilterApi() {\n  let categoryEncode = '[[at(document.type, \"category\")]]';\n  let categoryLanguage = \"en-us\";\n  let categoryPageSize = \"30\";\n  let { data: categoryDataApi, isLoading: categoryIsLoading } =\n    useFeaturedBanners(categoryEncode, categoryLanguage, categoryPageSize);\n  const {\n    setSearchFor,\n    filteredProducts,\n    defaultfiltered,\n    setFilteredProducts,\n    param,\n    setParam,\n    setProductEncode,\n    setProductPageSize,\n    setProductLanguage,\n    currentPage,\n    setCurrentPage,\n    setActiveItem,\n  } = useContext(ListContext);\n  const [params] = useSearchParams();\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [postPerPage, setPostsPerPage] = useState(12);\n\n  const [productList, setProductList] = useState(\"\");\n  const [productPagination, setProductPagination] = useState(\"\");\n  const [clearButton, setClearButton] = useState(false);\n  const [focus, setFocus] = useState(false);\n  let feature = \"\";\n\n  //Call API and retreive data\n  useEffect(() => {\n    setParam(params.get(\"category\") ?? \"\");\n    setProductEncode('[[at(document.type, \"product\")]]');\n    setProductPageSize(100);\n    setProductLanguage(\"en-us\");\n  }, []);\n\n  //Filters following the categories selected\n  const { productisLoading } = useFilter(feature);\n\n  useEffect(() => {\n    focus ? setFocus(false) : null;\n  }, [focus]);\n\n  //Creates the list of all the products that will be shown\n  useEffect(() => {\n    let temp = [];\n    const productList = () =>\n      !productisLoading && Object.values(filteredProducts).length\n        ? (Object.values(filteredProducts).forEach((item) =>\n            item.map((item) => (temp = temp.concat(item)))\n          ),\n          setProductList(temp),\n          setClearButton(true))\n        : (defaultfiltered.map((item) => (temp = temp.concat(item))),\n          setProductList(temp),\n          setClearButton(false));\n    productList();\n    setCurrentPage(1);\n    setActiveItem(1);\n  }, [filteredProducts, defaultfiltered]);\n\n  //Slices the list previously mentioned to apply pagination\n  useEffect(() => {\n    let indexLastItem = currentPage * postPerPage;\n    let indexFirstItem = indexLastItem - postPerPage;\n    setProductPagination(productList.slice(indexFirstItem, indexLastItem));\n    window.scrollTo(0, 0);\n  }, [productList, currentPage, productList]);\n\n  const handleFiltering = (e, categoryClicked) => (\n    e.target.style.color === \"gray\"\n      ? setSearchFor({\n          [categoryClicked.replace(\" & \", \"--\").toLowerCase()]: categoryClicked\n            .replace(\" & \", \"--\")\n            .toLowerCase(),\n        })\n      : setSearchFor({ [categoryClicked.replace(\" & \", \"--\")]: \"remove\" }),\n    e.target.style.color === \"gray\"\n      ? (e.target.style.color = \"blue\")\n      : (e.target.style.color = \"gray\"),\n    param === categoryClicked.replace(\" & \", \"--\").toLowerCase()\n      ? setParam(\"\")\n      : null,\n    searchParams.delete(\"category\"),\n    setSearchParams(searchParams)\n  );\n\n  const handleReset = () => (\n    setSearchFor(\"\"),\n    setFilteredProducts(\"\"),\n    setClearButton(false),\n    setParam(\"\"),\n    searchParams.delete(\"category\"),\n    setSearchParams(searchParams),\n    setFocus(true)\n  );\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  return (\n    <>\n      <styles.Container>\n        <styles.NavBarContainer>\n          <styles.NavBarCard>\n            <styles.Title>\n              <h1>Products</h1>\n            </styles.Title>\n            <ul>\n              <styles.NavBarList>\n                {!focus\n                  ? !categoryIsLoading\n                    ? categoryDataApi.results.map((item) =>\n                        item.data.name.toLowerCase() !==\n                        param.replace(\"--\", \" & \") ? (\n                          <li key={item.id} style={myStyleGray} name={item.id}>\n                            <h3\n                              onClick={(e) =>\n                                handleFiltering(e, item.data.name.toLowerCase())\n                              }\n                              style={myStyleGray}\n                            >\n                              {item.data.name}\n                            </h3>\n                          </li>\n                        ) : (\n                          <li key={item.id} style={myStyleBlue} name={item.id}>\n                            <h3\n                              onClick={(e) =>\n                                handleFiltering(e, item.data.name.toLowerCase())\n                              }\n                              style={myStyleBlue}\n                            >\n                              {item.data.name}\n                            </h3>\n                          </li>\n                        )\n                      )\n                    : null\n                  : !categoryIsLoading\n                  ? categoryDataApi.results.map((item) => (\n                      <li\n                        key={item.data.name}\n                        style={myStyleGray}\n                        name={item.id}\n                      >\n                        <h3\n                          onClick={(e) =>\n                            handleFiltering(e, item.data.name.toLowerCase())\n                          }\n                          style={myStyleGray}\n                        >\n                          {item.data.name}\n                        </h3>\n                      </li>\n                    ))\n                  : null}\n              </styles.NavBarList>\n              {clearButton && (\n                <button\n                  style={{\n                    margin: \"3vw auto\",\n                    display: \"block\",\n                    color: \"#6495ed\",\n                    borderWidth: 0,\n                    paddin: \"1vw 0\",\n                  }}\n                  onClick={handleReset}\n                >\n                  Clear Filter\n                </button>\n              )}\n            </ul>\n          </styles.NavBarCard>\n        </styles.NavBarContainer>\n        <styles.ProductContainer style={{ width: \"auto\" }}>\n          <ProductGrid\n            feature={feature}\n            productisLoading={productisLoading}\n            product={productPagination}\n          ></ProductGrid>\n          <Pagination\n            postPerPage={postPerPage}\n            totalPosts={productList.length}\n          ></Pagination>\n        </styles.ProductContainer>\n      </styles.Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport ProductFilterApi from \"../../components/productFilter/ProductFilterApi.js\";\nconst ProductPage = () => <ProductFilterApi></ProductFilterApi>;\n\nexport default ProductPage;\n"],"names":["Pagination","postPerPage","totalPosts","useContext","ListContext","setCurrentPage","activeItem","setActiveItem","pageNumbers","i","Math","ceil","push","className","map","number","name","onClick","e","target","window","scrollTo","handleClick","Container","styled","NavBarContainer","NavBarList","NavBarCard","ProductContainer","Title","myStyleGray","color","myStyleBlue","ProductFilterApi","useFeaturedBanners","categoryDataApi","data","categoryIsLoading","isLoading","setSearchFor","filteredProducts","defaultfiltered","setFilteredProducts","param","setParam","setProductEncode","setProductPageSize","setProductLanguage","currentPage","useSearchParams","params","searchParams","setSearchParams","useState","productList","setProductList","productPagination","setProductPagination","clearButton","setClearButton","focus","setFocus","useEffect","get","productisLoading","useFilter","temp","Object","values","length","forEach","item","concat","indexLastItem","indexFirstItem","slice","handleFiltering","categoryClicked","style","replace","toLowerCase","delete","results","id","margin","display","borderWidth","paddin","width","ProductGrid","feature","product"],"sourceRoot":""}