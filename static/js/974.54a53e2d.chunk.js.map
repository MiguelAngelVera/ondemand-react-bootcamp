{"version":3,"file":"static/js/974.54a53e2d.chunk.js","mappings":"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","sources":["components/pagination/Pagination.js","components/productFilter/ProductList-style.js","components/search/Search.js","utils/hooks/useSearch.js","pages/search/SearchPage.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport ListContext from \"../../states/ListContext\";\nimport { Paginate } from \"../productFilter/ProductList-style\";\nimport \"./Pagination.css\";\n\nexport default function Pagination({ postPerPage, totalPosts }) {\n  const { setCurrentPage, activeItem, setActiveItem } = useContext(ListContext);\n  const pageNumbers = [];\n\n  const handleClick = (e, number) => {\n    setCurrentPage(e.target.name);\n    setActiveItem(number);\n    window.scrollTo(0, 0);\n  };\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"Pages\">\n        {pageNumbers.map((number) => (\n          <li key={number} className=\"Page\">\n            <button\n              key={number}\n              name={number}\n              onClick={(e) => handleClick(e, number)}\n              className={activeItem === number ? \"PageButtonOn\" : \"PageButton\"}\n            >\n              {number}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  overflow: hidden;\n  background-color: #e6e6e6;\n  width: 100%;\n  display: flex;\n  gap: 10px;\n  height: auto;\n  flex-wrap: nowrap;\n  height: auto;\n  border-top: 60px solid #e6e6e6;\n  @media (max-width: 900px) {\n    display: inline;\n  }\n`;\nexport const NavBarContainer = styled.nav`\n  margin-left: 8vw;\n  background-color: #e6e6e6;\n  border-radius: 10px;\n  padding: 1rem 1rem;\n  flex: 1;\n  height: 100vh;\n  @media (max-width: 900px) {\n    border-radius: 0px;\n    width: 100%;\n    padding: 0 0;\n    margin-left: 0;\n    border: none;\n    height: auto;\n    gap: 0;\n    width: 100%;\n    height: auto;\n    border-radius: 0;\n    border: none;\n    border-top: 20px solid #e6e6e6;\n    z-index: 3;\n    padding-top: 10vw;\n  }\n`;\n\nexport const NavBarList = styled.div`\n  @media (max-width: 900px) {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-evenly;\n  }\n`;\nexport const NavBarCard = styled.div`\n  h1 {\n    font-size: 1.6vw;\n    margin-bottom: 2.7vw;\n    @media (max-width: 900px) {\n      margin-bottom: 0px;\n      align-items: center;\n      font-size: 3vw;\n      text-align: center;\n    }\n  }\n  h2 {\n    font-size: 1.1vw;\n    @media (max-width: 900px) {\n      text-align: center;\n      font-size: 1.6vw;\n    }\n  }\n  h3 {\n    font-size: 1vw;\n    color: gray;\n    @media (max-width: 900px) {\n      font-size: 3vw;\n    }\n  }\n  li {\n    margin: 0px;\n    list-style: none;\n    font-size: 0.8vw;\n    color: gray;\n  }\n  ul {\n    list-style-type: none;\n    padding: 0px;\n    margin: 0px;\n    @media (max-width: 900px) {\n      margin: 0 auto;\n      align-items: center;\n      gap: 3vw;\n    }\n  }\n`;\n\nexport const ProductContainer = styled.div`\n  background-color: #e6e6e6;\n  @media (max-width: 900px) {\n    padding: 10vw 0;\n  }\n`;\nexport const ProductCard = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  background-color: #e6e6e6;\n`;\n\nexport const ProductImage = styled.div`\n  background-color: white;\n  border-radius: 7px;\n  width: 70%;\n  img {\n    object-fit: cover;\n    width: 80%;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const Line = styled.div`\n  margin: auto 13px;\n  border: 0.6px solid gray;\n  opacity: 30%;\n`;\n\nexport const ProductText = styled.div`\n  position: relative;\n  height: 100%;\n  padding: 3.5vw 1.5vw;\n\n  @media (max-width: 900px) {\n    padding: 4.5vw 4.5vw;\n  }\n`;\nexport const ProductName = styled.div`\n  font-size: 1vw;\n  color: gray;\n  @media (max-width: 900px) {\n    font-size: 2.7vw;\n  }\n`;\n\nexport const ProductPrice = styled.div`\n  font-size: 1.8vw;\n  @media (max-width: 900px) {\n    font-size: 4vw;\n  }\n`;\n\nexport const ProductCategory = styled.div`\n  position: absolute;\n  font-size: 0.7vw;\n  color: gray;\n  top: 0;\n  @media (max-width: 900px) {\n    font-size: 2vw;\n  }\n`;\n\nexport const Paginate = styled.div`\n  font-size: 1.8vw;\n  background-color: #e6e6e6;\n  height: 30vw;\n  justify-content: center;\n  display: flex;\n  @media (max-width: 900px) {\n    font-size: 4vw;\n  }\n`;\nexport const Arrow = styled.button`\n  border-radius: 0.3rem;\n  background-color: #e6e6e6;\n  color: #6495ed;\n  border-width: 0px;\n  padding: 3vw;\n  font-size: 2vw;\n  @media (max-width: 900px) {\n    font-size: 4vw;\n    width: 12vw;\n    height: 12vw;\n  }\n`;\nexport const Title = styled.div`\n  margin-top: \"0\";\n  @media (max-width: 900px) {\n    margin-top: \"15vw\";\n  }\n`;\n","/* eslint-disable array-callback-return */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-sequences */\nimport { useContext, useEffect, useReducer, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport ListContext from \"../../states/ListContext\";\nimport useSearch from \"../../utils/hooks/useSearch\";\nimport Pagination from \"../pagination/Pagination\";\nimport ProductGrid from \"../productGrid/ProductGrid\";\n\nexport default function Search() {\n  const [postPerPage, setPostsPerPage] = useState(20);\n  const [params] = useSearchParams(\"\");\n\n  const [test, setTest] = useState(\"\");\n\n  const [filteredSearchList, setFilteredSearchList] = useState(\"\");\n  const [filteredSearchPagination, setfilteredSearchPagination] = useState(\"\");\n  const {\n    setProductEncode,\n    setProductPageSize,\n    setProductLanguage,\n    searchString,\n    setSearchString,\n    filterSearchName,\n    setFilterSearchName,\n    filterSearchCat,\n    setFilterSearchCat,\n    filterSearchDesc,\n    setFilterSearchDesc,\n    currentPage,\n    setCurrentPage,\n    setActiveItem,\n  } = useContext(ListContext);\n\n  useEffect(() => {\n    setSearchString(params.get(\"q\") ?? \"\");\n    setTest(searchString);\n    setFilterSearchName([]);\n    setFilterSearchCat([]);\n    setFilterSearchDesc([]);\n    setCurrentPage(1);\n    setProductEncode(\n      `[[at(document.type, \"product\")]]&q=[[fulltext(document, \"${test}\")]]`\n    );\n    setProductPageSize(100);\n    setProductLanguage(\"en-us\");\n  }, [params, searchString]);\n\n  useEffect(() => {\n    let temp = [];\n    let skuKey = \"\";\n    let found = \"\";\n\n    filterSearchName.map((item) => {\n      skuKey = item.data.sku;\n      found = temp.filter((item) =>\n        item.data.sku.toLowerCase().includes(skuKey)\n      );\n\n      if (!found.length) {\n        temp = temp.concat(item);\n      }\n    });\n    filterSearchDesc.map((item) => {\n      skuKey = item.data.sku;\n      found = temp.filter((item) =>\n        item.data.sku.toLowerCase().includes(skuKey)\n      );\n      if (!found.length) {\n        temp = temp.concat(item);\n      }\n    });\n    filterSearchCat.map((item) => {\n      skuKey = item.data.sku;\n      found = temp.filter((item) =>\n        item.data.sku.toLowerCase().includes(skuKey)\n      );\n\n      if (!found.length) {\n        temp = temp.concat(item);\n      }\n    });\n    setFilteredSearchList(temp);\n    setActiveItem(1);\n  }, [filterSearchName, filterSearchCat, filterSearchDesc]);\n  //Slices the list previously mentioned to apply pagination\n  useEffect(() => {\n    let indexLastItem = currentPage * postPerPage;\n    let indexFirstItem = indexLastItem - postPerPage;\n    setfilteredSearchPagination(\n      filteredSearchList.slice(indexFirstItem, indexLastItem)\n    );\n  }, [filteredSearchList, currentPage]);\n\n  const { productisLoading } = useSearch(test, params);\n\n  return (\n    <>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      {filteredSearchPagination.length ? (\n        <div>\n          <ProductGrid\n            productisLoading={productisLoading}\n            product={filteredSearchPagination}\n          ></ProductGrid>\n          <Pagination\n            postPerPage={postPerPage}\n            totalPosts={filteredSearchList.length}\n          ></Pagination>\n        </div>\n      ) : (\n        <h2 style={{ textAlign: \"center\" }}>Nothing to show ...</h2>\n      )}\n    </>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-expressions */\nimport { useContext, useEffect } from \"react\";\nimport { useFeaturedBanners } from \"./useFeaturedBanners\";\nimport ListContext from \"../../states/ListContext\";\n\nexport default function useSearch(test) {\n  const {\n    productEncode,\n    productPageSize,\n    productLanguage,\n    setFilterSearchName,\n    setFilterSearchCat,\n    setFilterSearchDesc,\n  } = useContext(ListContext);\n\n  const { data: productDataApi, isLoading: productisLoading } =\n    useFeaturedBanners(productEncode, productLanguage, productPageSize, \"\");\n\n  useEffect(() => {\n    let found = \"\";\n\n    const filteringName = () =>\n      !productisLoading && productDataApi\n        ? ((found = productDataApi.results.filter((item) =>\n            item.data.name.toLowerCase().includes(test)\n          )),\n          found.length ? setFilterSearchName(found) : null)\n        : null;\n    const filteringCategory = () =>\n      !productisLoading && productDataApi\n        ? ((found = productDataApi.results.filter((item) =>\n            item.data.category.slug.toLowerCase().includes(test)\n          )),\n          found.length ? setFilterSearchCat(found) : null)\n        : null;\n    const filteringDescription = () =>\n      !productisLoading && productDataApi\n        ? ((found = productDataApi.results.filter((item) =>\n            item.data.description[0].text.toLowerCase().includes(test)\n          )),\n          found.length ? setFilterSearchDesc(found) : null)\n        : null;\n    filteringName();\n    filteringCategory();\n    filteringDescription();\n\n    window.scrollTo(0, 0);\n  }, [test, productisLoading, productDataApi]);\n  return { productisLoading };\n}\n","import React from \"react\";\nimport Search from \"../../components/search/Search.js\";\nconst SearchPage = () => <Search></Search>;\nexport default SearchPage;\n"],"names":["Pagination","postPerPage","totalPosts","useContext","ListContext","setCurrentPage","activeItem","setActiveItem","pageNumbers","i","Math","ceil","push","className","map","number","name","onClick","e","target","window","scrollTo","handleClick","Container","styled","NavBarContainer","NavBarList","NavBarCard","ProductContainer","Title","Search","useState","useSearchParams","params","test","setTest","filteredSearchList","setFilteredSearchList","filteredSearchPagination","setfilteredSearchPagination","setProductEncode","setProductPageSize","setProductLanguage","searchString","setSearchString","filterSearchName","setFilterSearchName","filterSearchCat","setFilterSearchCat","filterSearchDesc","setFilterSearchDesc","currentPage","useEffect","get","temp","skuKey","found","item","data","sku","filter","toLowerCase","includes","length","concat","indexLastItem","indexFirstItem","slice","productEncode","productPageSize","productLanguage","useFeaturedBanners","productDataApi","productisLoading","isLoading","results","category","slug","description","text","useSearch","ProductGrid","product","style","textAlign"],"sourceRoot":""}